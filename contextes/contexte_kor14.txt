                    # [632]객체 간 관계 정의
                            객체 간 관계 정의
   SQLite는 관계형 데이터베이스이므로 항목 간 관계를 정의할 수 있습니다. 대부분의 객체 관계 매핑(ORM) 라이브러리에서는
   Room에서는 2가지 방법으로 항목 간 관계를 정의하고 쿼리합니다. 즉, 삽입된 객체가 있는 중간 데이터 클래스나 멀티매핑 반환
   유형이 있는 관계형 쿼리 메서드를 사용할 수 있습니다.
   중간 데이터 클래스 접근 방식에서는 Room 항목 간 관계를 모델링하는 데이터 클래스를 정의합니다. 이 데이터 클래스는 한
   [1399]멀티매핑 반환 유형을 정의하고 SQL 쿼리에서 항목 간 관계를 직접 정의합니다.
   이 가이드의 나머지 부분에서는 중간 데이터 클래스 접근 방식을 사용하여 관계를 정의하는 방법을 보여줍니다.
일대일 관계 정의
   두 항목 간의 일대일 관계는 상위 항목의 각 인스턴스가 정확히 하나의 하위 항목 인스턴스에 상응하는 관계이며, 그 반대의 경우도
   라이브러리는 정확히 한 명의 사용자에 상응합니다. 따라서 User 항목과 Library 항목은 일대일 관계입니다.
   일대일 관계를 정의하려면 먼저 두 항목 각각의 클래스를 만듭니다. 항목 중 하나는 다른 항목의 기본 키를 참조하는 변수를
   사용자 및 상응하는 라이브러리의 목록을 쿼리하려면 먼저 두 항목 간의 일대일 관계를 모델링해야 합니다. 그러려면 각 인스턴스가
일대다 관계 정의
   두 항목 간의 일대다 관계는 상위 항목의 각 인스턴스가 0개 이상의 하위 항목 인스턴스에 상응하지만 하위 항목의 각 인스턴스는
   정확히 하나의 상위 항목 인스턴스에만 상응할 수 있는 관계입니다.
   관계입니다.
   일대다 관계를 정의하려면 먼저 두 항목의 클래스를 만듭니다. 일대일 관계에서와 같이 하위 항목은 상위 항목의 기본 키 참조인
   사용자 목록 및 상응하는 재생목록을 쿼리하려면 먼저 두 항목 간의 일대다 관계를 모델링해야 합니다. 그러려면 각 인스턴스가 상위
다대다 관계 정의
   두 항목 간의 다대다 관계는 상위 항목의 각 인스턴스가 0개 이상의 하위 항목 인스턴스에 상응하며, 그 반대의 경우도
   노래는 서로 다른 여러 재생목록에 속할 수 있습니다. 따라서 Playlist 항목과 Song 항목은 다대다 관계입니다.
   다대다 관계를 정의하려면 먼저 두 항목 각각의 클래스를 만듭니다. 다대다 관계는 일반적으로 하위 항목에 상위 항목에 대한 참조가
   없다는 점에서 다른 관계 유형과 구별됩니다. 대신 세 번째 클래스를 만들어 두 항목 간의 [1411]연결 항목(또는 상호 참조
   테이블)을 나타냅니다. 상호 참조 테이블에는 테이블에 표시된 다대다 관계에 있는 각 항목의 기본 키 열이 있어야 합니다. 이
   관계를 모델링함으로써 Playlist 항목과 Song 항목 간의 관계를 알려주는 상호 참조 항목을 식별합니다.
   참고: @Relation 주석이 특정 사용 사례를 충족하지 않으면 SQL 쿼리에서 JOIN 키워드를 사용하여 적절한 관계를
중첩된 관계 정의
   때로 서로 관련이 있는 세 개 이상의 테이블 집합을 쿼리해야 할 수도 있습니다. 이 경우 테이블 간에 중첩된 관계를 정의합니다.
   주의: 중첩된 관계가 있는 데이터를 쿼리하려면 Room에서 많은 양의 데이터를 조작해야 하며 이는 성능에 영향을 줄 수
   있습니다. 그러므로 쿼리에 중첩된 관계를 최소한만 사용하세요.
   한다고 가정해 보겠습니다. 사용자는 재생목록과 [1416]일대다 관계가 있으며 재생목록은 노래와 [1417]다대다 관계가
   있습니다. 다음 코드 예에서는 이러한 항목을 나타내는 클래스뿐만 아니라 재생목록과 노래 간의 다대다 관계를 제시하는 상호 참조
   먼저 데이터 클래스 및 [1418]@Relation 주석을 사용하여 평소처럼 집합 내 두 테이블 간의 관계를 모델링합니다. 다음
   예는 Playlist 항목 클래스와 Song 항목 클래스 간의 다대다 관계를 모델링하는 PlaylistWithSongs 클래스를
   이 관계를 나타내는 데이터 클래스를 정의한 후 집합의 다른 테이블과 첫 번째 관계 클래스 간의 관계를 모델링하여 새 관계 내부에
   기존 관계를 '중첩'하는 또 다른 데이터 클래스를 만듭니다. 다음 예는 User 항목 클래스와 PlaylistWithSongs
   관계 클래스 간의 일대다 관계를 모델링하는 UserWithPlaylistsAndSongs 클래스를 보여줍니다.
   관계를 간접적으로 모델링합니다. 이는 그림 1에 설명되어 있습니다.
UserWithPlaylistsAndSongs는 User와 PlaylistWithSongs 간의 관계를 모델링하며 이는
    결과적으로 Playlist와 Song 간의 관계를 모델링합니다.
그림 1. 음악 스트리밍 앱 예에서 관계 클래스의 다이어그램
   집합에 테이블이 더 많이 있다면 나머지 각 테이블 간의 관계를 모델링하는 클래스 및 이전의 모든 테이블 간의 관계를 모델링하는
   관계 클래스를 만듭니다. 이렇게 하면 쿼리하려는 모든 테이블 간에 중첩된 관계 체인이 생성됩니다.
   Room의 항목 간 관계 정의에 관한 자세한 내용은 다음 추가 리소스를 참고하세요.
     * [1423]Room과의 데이터베이스 관계
