   #prev next

     * Discrete Mathematics
     *
     * 과목소개
          + 개요
          + 강의 계획
          + 평가방법
          + 교재 및 참고도서
     * 1 이산수학의 개요
          + 1.1 이산수학(Discrete Mathematics)이란?
          + 1.2 이산수학으로 해결하려는 다양한 문제들
          + 1.3 본 강좌의 목표
          + 1.4 인공지능과 이산수학
     * 2 논리와 명제 (Logic & Propositions)
          + 2.1 명제 (Propositions)
          + 2.2 논리 연산
               o 2.2.1 부정(Negation)
               o 2.2.2 논리곱 (Conjunction)
               o 2.2.3 논리합 (Disjunction)과 배타적 논리합 (XOR)
               o 2.2.4 조건, 함축 (conditional or implication)
               o 2.2.5 상호조건, 쌍방조건 (biconditional, bi-implications)
               o 2.2.6 논리연산자의 우선순위
          + 2.3 항진명제, 모순명제
          + 2.4 논리적 동치 관계
          + 2.5 논증과 추론
               o 2.5.1 추론 규칙
          + 2.6 1차 논리(1st-order logic, predicate logic)
          + 2.7 Symbolic programming with Python
          + 2.8 과제
     * 3 집합과 디지털 수
          + 3.1 집합 (Set)
          + 3.2 집합을 표현하는 방법
          + 3.3 Set operations(집합연산)
               o 3.3.1 집합의 연산 법칙
          + 3.4 집합의 분할
          + 3.5 컴퓨터에서 집합 표현 및 연산
          + 3.6 파이썬 집합 및 집합연산
          + 3.7 이진수의 표현 및 계산
               o 3.7.1 십진수(decimal)를 이진수(binary)로 변환
               o 3.7.2 이진수의 보수
               o 3.7.3 보수를 이용한 뺄셈
               o 3.7.4 이진수 곱하기
     * 4 증명 (Proofs)
          + 4.1 수학에서 증명이란
               o 4.1.1 증명관련 용어
          + 4.2 증명의 방법론
               o 4.2.1 증명의 단계적 접근 방법
          + 4.3 여러 가지 증명 방법
               o 4.3.1 수학적 귀납법(Mathematical Induction)
               o 4.3.2 직접 증명법(Direct Proof)
               o 4.3.3 대우 증명법(Contrapositive Proof)
               o 4.3.4 모순 증명법(Proof by Contradiction)
               o 4.3.5 존재 증명법(Existence Proof)
               o 4.3.6 반례 증명법(Proof by Counter-example)
               o 4.3.7 필요충분조건 증명법(if and only if proof)
          + 4.4 프로그램의 입증
          + 4.5 과제
     * 5 관계와 표현
          + 5.1 관계 (Relations)
          + 5.2 관계의 표현 방법
          + 5.3 관계의 합성 (Combining Relations)
          + 5.4 Complementary Relations (보수 관계)
          + 5.5 관계의 성질 (Properties of Relations)
          + 5.6 동치와 분할
          + 5.7 부분 순서 관계
          + 5.8 연습문제
          + 중간고사 일정 공지
     * 6 행렬과 행렬식
          + 6.1 행렬 연산
               o 6.1.1 행렬합
               o 6.1.2 벡터의 놈(norm)과 내적 (inner product)
               o 6.1.3 Matrix-Vector Multiplication
               o 6.1.4 행렬곱
          + 6.2 특수한 행렬
          + 6.3 역행렬
          + 6.4 선형방정식 (linear equation)
          + 6.5 선형변환
          + 6.6 Boolian 행렬 (0-1 행렬)
     * 7 함수
          + 7.1 함수
          + 7.2 단사 함수, 전사 함수, 전단사 함수
          + 7.3 역함수, 합성함수
          + 7.4 Countable verus Uncountable
          + 교재 연습문제
     * 8 수열과 급수
          + 8.1 특별한 수열
     * 9 그래프
          + 9.1 컴퓨터공학에서 그래프 이론의 응용
          + 9.2 그래프 (graph)
          + 9.3 그래프의 표현 방법
               o 9.3.1 인접행렬(adjacency matrix)
               o 9.3.2 인접리스트(adjacency list)
               o 9.3.3 결합행렬 (근접행렬; Incidence Matrices)
          + 9.4 특수형태 그래프
          + 9.5 연결 그래프
          + 9.6 그래프 응용
               o 9.6.1 최단 경로
               o 9.6.2 해밀턴 순회의 응용
          + 9.7 그래프의 순회(탐색)
               o 9.7.1 깊이 우선 탐색(Depth First Search : DFS)
               o 9.7.2 너비 우선 탐색(Breadth First Search : BFS)
          + 9.8 그래프의 색칠 문제
          + 교재 연습문제
     * 10 트리
          + 10.1 트리의 기본개념
          + 10.2 순서화된 트리
          + 10.3 이진 트리
          + 10.4 이진 트리를 표현하는 방법
          + 10.5 이진 트리의 순회
          + 10.6 생성트리와 최소비용 생성트리
               o 10.6.1 MST의 응용분야
          + 10.7 트리의 활용
               o 10.7.1 문법의 파싱(parsing)
               o 10.7.2 결정 트리(decision tree)
               o 10.7.3 게임 트리(game tree)
          + 기말고사 일정 및 보강계획
          + 교재 연습문제
     * 11 순열, 이산확률, 재귀적관계
          + 11.1 경우의 수, 순열과 조합
          + 11.2 이산적 확률과 통계
               o 11.2.1 확률의 유래
               o 11.2.2 확률의 정의
               o 11.2.3 확률의 계산 (고전적 정의에 의한)
               o 11.2.4 조건부 확률과 베이즈 정리
               o 11.2.5 확률변수
               o 11.2.6 베르누이 분포, 이항분포
               o 11.2.7 초기하분포와 확률변수
               o 11.2.8 기하분포, 음이항분포
               o 11.2.9 포아송(Poisson) 문포
          + 11.3 비둘기 집 원리 *
          + 11.4 재귀적 정의
               o 11.4.1 피보나치 수(Fibonacci numbers)
     * 12 알고리즘을 통한 문제해결
          + 12.1 알고리즘 분석
               o 12.1.1 시간 복잡성과 공간 복잡성
          + 12.2 알고리즘 복잡성
          + 12.3 재귀 함수의 복잡성
          + 12.4 탐색 알고리즘
               o 12.4.1 \(O(n)\) 알고리즘
               o 12.4.2 \(O(\log_2 n)\) 알고리즘
          + 12.5 정렬 알고리즘
               o 12.5.1 \(O(n^2)\) 알고리즘
               o 12.5.2 \(O(n \log_2 n)\) 알고리즘
          + 교재 연습문제
     * 13 부울 대수
          + 13.1 부울식 (Boolian expression)
          + 13.2 Bool function (부울 함수)
          + 13.3 Representing Boolean Functions
          + 13.4 부울함수의 간소화
               o 13.4.1 두 변수에 대한 카노우맵
               o 13.4.2 세 변수에 대한 카노우맵
          + 교재 연습문제
     * A1. 부록
          + 13.5 파이썬 sympy 패키지 소개
     * A2. 과제 및 연습문제 풀이
          + 과제1: 논리와 명제
          + 과제2: 증명법
          + 관계와 표현 연습문제
          + 행렬
     * 이산구조 중간고사 결과 및 해답
          + 중간고사 결과
          + 중간고사 문제 풀이
     * 이산구조 기말고사 해답
          + O/X문제
          + 선택문제
          + 주관식문제
     *
     * 강의 홈

이산수학 (Discrete Mathematics)

5 장 관계와 표현

   관계(Relation)
     * 관계(Relation)란 객체들 간의 연관성을 표현하는 구조로서, 수학이나 공학 분야뿐만 아니라 여러 다른 분야에서도
       기본적이고 중요한 개념임
     * 수학, 컴퓨터, 여러 가지 공학 분야에서의 객체들도 이와 같이 여러 가지 관계를 가짐

   관계의 예시
     * 집합A가 집합B의 부분 집합인 경우 관계가 있음
     * 두 개의 디지털 논리 회로가 같은 입출력 도표를 가졌을 때 두 회로는 관계가 있음
     * 컴퓨터 프로그램에서 두 변수가 같은 이름과 프로그램 실행 시 같은 저장 장소를 사용하면 관계가 있다고 함

5.1 관계 (Relations)

   정의 5.1 (Relation) 집합 \(A\)와 \(B\)가 있을 때, \(A\)와 \(B\)의 카테시안 곱(\(A\times
   B\))의 부분집합(subset) \(R\)을 \(A\)에서 \(B\)로 관계라고 한다. 또는 binary relations
   (이진관계, 이항관계)라고 한다. \[ R := \{(a,b) | a\in A, b \in B\} \subseteq
   A\times B. \]
     * 위에서 \(A\)를 정의역 (Domain), \(B\)를 공역 (Codomain)이라고 함
     * 치역(Range) = \(\{b \in B | (a,b) \in R\}\)

   [relation.png]
     * \((a,b)\)가 관계 \(R\)의 원소이면 아래처럼 표시함 \[ (a,b) \in R, \\ aRb, \\ R (a,
       b). \]
     * \(aRb\)이면, “\(a\)는 (관계 \(R\)에 의해서) \(b\)에 관계된다”고 말한다.

   예제 5.1 \(A=\{1,2,3\}\), \(B=\{a, b\}\)일 때, \(\{(1,a), (2,a), (3,b)\}\)는
   \(A\)에서 \(B\)로의 관계이다.

   정의 5.2 집합 \(A\)에서 자기 자신 \(A\)로의 관계를 집합 \(A\) 위로의 관계(relation on a set
   \(A\))라고 한다. \[ R \subseteq A\times A. \]

   예제 5.2 \(A = \{1, 2, 3, 4\}\)일 때, \(b/a\)가 정수가 되는 모든 순서쌍\((a,b)\)을 원소로
   하는 관계를 구하라.

   풀이. \[ R = \{(1, 1), (1, 2), (1, 3), (1, 4), (2, 2), (2, 4), (3, 3),
   (4, 4)\} \]

   예제 5.3 \(A = \{a,b,c\}\)일 때, 집합\(A\) 위로의 관계는 모두 몇개인가?

   풀이. 집합 \(A\)위로의 관계는 카테시안 곱 (\(A\times A\))의 부분집합이다.

   가능한 집합\(A\) 위로의 관계는 카테시안 곱 (\(A\times A\))의 부분집합의 개수와 같다.

   카테시안 곱 (\(A\times A\))의 원소의 개수는 \(3^2=9\)이므로 부분집합의 개수는 \[ 2^{9} = 512.
   \]

   정의 5.3 (항등 관계) 집합 \(A\)위로의 관계가 아래와 같을 때, \(I_A\)를 항등 관계(identity
   relation)라고 한다. \[ I_A = \{(a,a)|a\in A\}. \]
     __________________________________________________________________

   정의 5.4 (역관계, inverse relation) \(A\)에서 \(B\)로의 이진관계 \(R\)의 역관계 (inverse
   relation) \(R^{−1}\)는 \(B\)에서 \(A\)로의 관계로 다음과 같이 정의함 \[ R^{−1} :=
   \{(b,a) | (a,b) \in R\}. \] 즉, \(R\)에서의 순서쌍의 순서를 바꾼 것과 같다.

   예제 5.4 \(A = \{1,2,3\}\), \(B=\{3,4\}\)일 때, 관계 \(R\)이 다음과 같이 정의되었다고 하자.
   \(R\)의 역관계는 ? \[ R = \{(1,3), (2,3), (2,4), (3,4)\} \]

   풀이. 역관계는 순서쌍의 순서를 바꾸면 됨, 따라서 \[ R^{-1} = \{(3,1), (3,2), (4,2),
   (4,3)\}. \]

   예제 5.5 If \(R:People{\leftrightarrow}Foods\) is defined by \(aRb \equiv
   a \text{ eats }b\), then:
   \(b R^{−1} a \equiv b \text{ is eaten by }a\). (\(R^{−1} =\) “is eaten
   by”.)

5.2 관계의 표현 방법

     관계를 표현하는 편리한 방법들로는 화살표 도표(arrow diagram), 좌표 도표(coordinate diagram),
     방향 그래프(directed graph), 관계 행렬(relation matrix) 등이 있음

   [%EA%B4%80%EA%B3%84%ED%91%9C%EC%8B%9C%EB%B0%A9%EB%B2%95.png]

   화살표 도표(arrow diagram)
          \((a, b) \in R\)라고 할 때, 원소 \(a\in A\)에서 \(b\in B\)로 화살표로 연결

   [%ED%99%94%EC%82%B4%ED%91%9C%EB%8F%84%ED%91%9C.PNG]

   좌표 도표(Coordinate Diagram)
          집합 \(A\)의 원소를 \(x\)-좌표, 집합 \(B\)의 원소를 \(y\)-좌표로 간주하여 \(x-y\)좌표
          평면에 점으로 표시

   [%EC%A2%8C%ED%91%9C%EB%8F%84%ED%91%9C.PNG]

   방향 그래프(Directed Graph)
          관계 \(R\)이 집합 \(A\) 위로의 관계라고 할 때, 집합 \(A\)의 원소를 그래프의
          꼭지점(vertex)으로 하여, \((a, b) \in R\)을 간선(edge)하는 방향그래프로 표현

   [%EB%B0%A9%ED%96%A5%EA%B7%B8%EB%9E%98%ED%94%84%ED%91%9C%EC%8B%9C%EB%B2%
   95.PNG]

   관계 행렬(Relation Matrix), 부울 행렬(Boolean Matrix)
          행렬의 각 행은 집합 A의 원소, 각 열은 집합 B의 원소를 표시하고, 관계의 원소인 순서쌍 \((a, b) \in
          R\)에 대하여 대응되는 행렬의 원소를 1, 나머지는 0으로 표현하는 방법, 아래는 \(A=\{1,2,3\}\)에서
          \(B=\{a,b,c,d\}\)로의 관계를 관계행렬로 나타낸 것임

   [dmatrix.png]

5.3 관계의 합성 (Combining Relations)

   정의 5.5 (합성관계) \(R: A {\leftrightarrow}B\), \(S: B
   {\leftrightarrow}C\)라고 할 때, \(R\)과 \(S\)의 합성관계 (composite relation)은
   아래와 같이 정의함 \[ R \circ S = \{(a,c) | a \in A, c \in C, (a, b) \in R, (b,
   c) \in S \}. \]

   [composition_relation.png]

   예제 5.6 \(A= \{1, 2, 3\}, B= \{1, 2, 3, 4\}, C=\{0, 1, 2\}\)가 주어지고, 관계
   \(R: A \iff B\)과 \(S: B\iff C\)를 아래와 같이 정의할 때, 합성관계 \(R \circ S\)를 구하라.
   \[ R = \{(1, 1), (1, 4), (2, 3), (3, 1), (3, 4)\}\\ S = \{(1, 0), (2,
   0), (3, 1), (3, 2), (4, 1)\} \]

   [composition_relation_ex1.png]

   정의 5.6 (Boolean Arithmetic) 불리안 연산은 {0,1}에서 합과 곱에 대하여 정의 \[ 0+0=0,
   ~0+1=1+0=1, ~1+1=1 \] \[ 0\times 0=0, ~0\times 1=1\times 0=0, ~1\times
   1=1 \]

   불리안(Boolian) 행렬곱을 이용한 합성관계의 계산 \[ R= \begin{bmatrix} 1 & 0& 0 &1 \\ 0 &
   0& 1&0 \\ 1 & 0& 0&1 \\ \end{bmatrix},~ S= \begin{bmatrix} 1 & 0& 0 \\
   1 & 0& 0 \\ 0 & 1& 1 \\ 0 & 1& 0 \\ \end{bmatrix},~ R\circ S = RS =
   \begin{bmatrix} 1 & 1 & 0\\ 0 & 1 & 1\\ 1 & 1 & 0\\ \end{bmatrix} \]

   예제 5.7 \(A = \{1,2,3,4\}, B=\{1,2,3\}\)이고 \(A\)에서 \(B\)로의 관계 \(R\)이 다음과
   같다. \[ R = \{(1,2), (1.3), (2,2), (3,1), (4,2)\}. \] 아래를 구하라.
    1. \(I_A\) (\(A\)위로의 항등관계)
    2. \(I_B\) (\(A\)위로의 항등관계)
    3. \(I_A \circ R\)

   풀이.
    1. \(I_A = \{(a,a)| a\in A\} = \{(1,1), (2,2), (3,3), (4,4)\}\)
    2. \(I_B = \{(a,a)| a\in B\} = \{(1,1), (2,2), (3,3)\}\)
    3. \(I_A \circ R = R = \{(1,1), (2,2), (3,3), (4,4)\}\)

   위의 예 (3)번은 행렬 연산을 이용하여 보일 수 있다. \[ I_A = \begin{bmatrix} 1 & 0& 0 & 0
   \\ 0 & 1& 0 & 0 \\ 0 & 0& 1 & 0 \\ 0 & 0& 0 & 1 \\ \end{bmatrix}, R =
   \begin{bmatrix} 0 & 1& 1 \\ 0 & 1& 0 \\ 1 & 0& 0 \\ 0 & 1& 0 \\
   \end{bmatrix} \] 로 표현할 수 있고, 불리안 행렬곱을 이용하면 \[ I_A R = \begin{bmatrix} 1
   & 0& 0 & 0 \\ 0 & 1& 0 & 0 \\ 0 & 0& 1 & 0 \\ 0 & 0& 0 & 1 \\
   \end{bmatrix} \begin{bmatrix} 0 & 1& 1 \\ 0 & 1& 0 \\ 1 & 0& 0 \\ 0 &
   1& 0 \\ \end{bmatrix} = \begin{bmatrix} 0 & 1& 1 \\ 0 & 1& 0 \\ 1 & 0&
   0 \\ 0 & 1& 0 \\ \end{bmatrix} = R. \] 위와 비슷하게 \(R I_B = R\), 즉 어떤 관계와
   항등관계의 합성은 다음과 같은 성질이 성립한다. \[ I_A \circ R = R\circ I_B = R. \]

5.4 Complementary Relations (보수 관계)

     * 어떤 이진관계 \(R:A{\leftrightarrow}B\)에 대하여, \(R\)의 보수(complement) \[
       \Rx:A{\leftrightarrow}B \] 는 이진관계이며 아래와 같이 정의한다. \[ \Rx := \{(a,b)
       | (a,b)\notin R\} = (A\times B) − R \]
          + 예:
            \[ \nless = \{(a,b) | (a,b) \notin <\} = \{(a,b) |
            \lnot(a<b)\} = \ge \]
     * 예제: \(A = \{0, 1, 2\}, B = \{a, b\}\)라 하고, A에서 B로의 이진관계 \(R =
       \{(0,a), (0,b), (1,a), (2,b)\}\)라고 하자.
          + \((0,a)\in R\) 이므로, \(0Ra\)라 할 수 있다.
          + 그러나, \((1,b)\notin R\) 이므로, \(1\Rx b\)라 할 수 있다.

5.5 관계의 성질 (Properties of Relations)

   정의 5.7 (Reflexivity, 반사성)
    1. \(A\)위로의 관계 \(R\)이 다음 조건을 만족하면 반사적 (reflexive)이다. \[ (a, a) \in R
       ~(= aRa), ~\forall a \in A. \]
    2. \(A\)위로의 관계 \(R\)이 다음 조건을 만족하면 비반사적 (irreflexive)이다. \[ (a, a)
       \notin R ~(= a\Rx a), ~\forall a \in A. \] 위 조건은 다음 조건과 동치이다. \[
       \nexists a \in A \text{ such that } (a, a) \in R . \]

   아래 그림은 반사관계의 예시를 방향 그래프 로 나타낸 것임

   [%EB%B0%98%EC%82%AC%EA%B4%80%EA%B3%84.PNG]

   예제 5.8
     * The relation \(\ge:= \{(a,b) | a\ge b, a\in N, b\in N\}\) is
       reflexive because \((a,a)\in \ge\) for all \(a\in N\).
     * The relation \(<\) is irreflexive because there is not exist \(a\)
       such that \(a<a\).
     * 양의 정수 집합에 대해 “나누다(/)” 관계는 반사적인가?
          + 임의의 양의 정수 \(a/a=1\)는 자기 자신으로 나누어 진다.
          + 즉, \((a,a) \in /\)가 성립한다.
          + 따라서, “나누다”는 양의 정수 집합에 대해 반사적이다.
     __________________________________________________________________

   정의 5.8 (symmetry 대칭성)
    1. 집합 \(A\)위로의 관계 \(R\)이 다음 조건을 만족하면 대칭적 (symmetric)이다. \[ \forall a,
       b\in A: (a,b)\in R ~\then~ (b,a)\in R. \] 즉, \((a,b)\)가 \(R\)의 원소일
       때, 반드시 \((b,a)\)도 \(R\)의 원소이면 대칭적이라 한다.

   [%EB%8C%80%EC%B9%AD%EA%B4%80%EA%B3%84.PNG]

   위의 그림에서 한점은 자기자신과 그리고 두 점간에는는 양방향 연결이 있음(a), 우측 행렬(b)은 대칭행렬(symetric
   matrix)
    2. 집합 \(A\)위로의 관계 \(R\)이 다음 조건을 만족하면 반대칭적 (antisymmetric)이다. \[
       \forall a, b\in A: (a,b)\in R \text{ and } (b,a)\in R ~\then~ a=b.
       \] 위의 조건과 동치인 조건 \[ \forall a, b\in A: (a,b) \in R, a \ne b \then
       (b,a) \notin R. \] 반대칭적 (antisymmetric)은 대칭적 (symmetric)이 아니다를 뜻하지
       않음, \((a,b)\) 이고 \((b,a)\)인 관계가 있으면 반드시 \(a\)와 \(b\)는 같아야 된다는 의미.

   [antisymmetrix.png] [asymmetrix.png]

   왼쪽은 반대칭, 오른쪽은 반대칭이 아님

   From Wikipidia: 대칭, 반대칭 비교
    2. 집합 \(A\)위로의 관계 \(R\)이 다음 조건을 만족하면 비대칭적 (asymmetric)이다. \[ \forall
       a, b\in A : (a,b)\in R \then (b,a)\notin R. \] 비대칭적 (asymmetric)은
       대칭적 (symmetric)이 아니다를 뜻하지 않음

   Remark. \((a,b)\in R\), \((b,a)\in R\), \(a=b\)를 각각 \(p,q,r\)이라 하고, 함축을
   포함한 논리적 동치를 이용하면 (ii) 반대칭의 조건이 동치임을 보일 수 있음 \[ p \land q \to r \IFF
   (p\to r) \lor (q\to r)\\ \IFF (\neg p \lor r) \lor (\neg q \lor r)\\
   \IFF (\neg p \lor r) \lor (\neg q)\\ \IFF \neg(\neg p \lor r) \to (\neg
   q) \\ \IFF (p \land \neg r) \to (\neg q) \\ \]

   정리5.1 비대칭(asymmetric) 관계는 반대칭(antisymmetric)이다.

   증명.
    1. \(R\) is asymmetric: for all \(a, b \in A\), \((a,b) \in R \then
       (b, a) \notin R\).
    2. This implies that for all \(a \ne b \in A\), \((a,b) \in R \then
       (b, a) \notin R\).
    3. So, \(R\) is antisymmetric by definition (반대칭의 동치 조건).

   대칭, 반대칭, 비대칭관계 비교

   [antisymmetrix.png] [not_antisymmetric.png]

   왼쪽은 반대칭 & 비대칭 관계, 오른쪽 그림은 반대칭이지만 비대칭 아닌 관계의 예

   정리5.2 비대칭(asymmetric) 관계는 반대칭(antisymmetric)이고 비반사적인(irreflexive) 관계와
   동치이다. 즉,
    1. 비대칭 관계이면 반대칭 관계이고 동시에 비반사적이다.
    2. 역으로 반대칭 관계이고 동시에 비반사적이면 비대칭 관계이다.

   비반사관계이고 반대칭이면 비대칭 관계

   예제 5.9
     * “=” (equality) is symmetric, antisymmetric, but not asymmetric
     * \(\le\) is antisymmetric but neither symmetric nor asymetric
     * \(<\) is asymmetric, antisymmetric but not symmetric
     * “is married to” is symmetric, antisymmetric, but not asymmetric
     * “likes” is antisymmetric, but neither symmetric nor asymmetric

   예제 5.10 자연수 집합에 대한 “나누다” 관계(\(\vert\))는 대칭인가? 반대칭인가?
     * \((1, 2) \in \vert\) 이지만 \((2, 1) \notin \vert\)이므로 대칭이 아님
     * Let \(p\): \(((a\vert b) \land (b\vert a))\), and \(q\): \(a=b\).
          + To prove that \(p\to q\), we will show \(\neg q \to \neg p\)
            (this is contrapositive.)
          + If \(a\ne b\), Not exist both \(a \vert b\) and \(b \vert a\)
          + \(\therefore \vert\) is antisymmetric.

   예제 5.11 \(A = \{1,2,3,4\}\) 위로 정의된 관계 \(R\)는 대칭, 반대칭, 비대칭?\[ R = \{ (1,
   1), (2, 2), (3, 3), (4, 4) \}. \]

   Check the condition:
    1. 모든 \((a, b) \in R\), \((b, a) \in R\): 대칭
    2. 모든 \(a \ne b\), \((a, b) \in R\)이고 \((b, a) \notin R\)이므로: 반대칭
    3. \((1, 1) \in R\)이므로 비대칭이 아님

   예제 5.12 \(A = \{1,2,3,4\}\) 위로 정의된 관계 \(R\)는 대칭, 반대칭, 비대칭? \[ R = \{
   (1, 1), (1, 3), (2, 3), (3, 4) \}. \] Check the condition:
    1. \((1, 3) \in R\)이지만 \((3, 1) \notin R\) 대칭이 아님
    2. 모든 \(a \ne b\), \((a, b) \in R\)이고 \((b, a) \notin R\)이므로: 반대칭
    3. \((1, 1) \in R\) 비대칭이 아님
     __________________________________________________________________

   정의 5.9 (transitive, 추이관계) 집합 \(A\)위로의 \(R\)이 다음 조건을 만족하면 \(R\)를 추이관계
   (transitive)라고 함 \[ \forall a, b, c \in A: (a, b) \in R \text{ and }
   (b, c) \in R \then (a, c) \in R. \]

   예제 5.13 자연수 집합(\(\mathrm{N}\))위의 “divides” (\(\vert\)) 관계는 transitive?
     * \(a | b \land b| c\) (premise)
     * Then, \(\exists k \exists l ((b = ak)\land (c = bl))\).
     * Hence, \(c = a(kl)\), so \(a\) divides \(c\) (\(a|c\))
     * So, this relation is transitive.

   예제 5.14 정수 집합(\(\mathrm{Z}\))위의 \(<\) 관계는 transitive?
     * \(a < b \land b< c\) 이면 \(a < c\)이므로 추이관계

   정리5.3 집합 \(A\)위로의 \(R\)이 다음 조건을 만족하면 \(R\)은 추이관계 (transitive)이다. \[
   R^2:=R\circ R \subseteq R. \]

   증명. By definition of composition (\(R\circ R\)), \[ (a, b)\in R \land
   (b, c) \in R \then (a,c) \in R^2. \] And from the assumption \(R\circ R
   \subseteq R\), \[ (a,c) \in R. \] This completes the proof.
     __________________________________________________________________

   정의 5.10 (closure, 클로저) 집합 \(A\)위로의 \(R\)이 있을 때, 어떤 성질 P에 대한 \(R\)의
   클로저(closure), \(R^+\)는 다음과 같이 정의한다.
    1. \(R^+\)는 성질 P를 갖는다.
    2. \(R \subseteq R^+\)이고
    3. \(R^+\)는 성질 P를 가지는 \(A \times A\)의 원소를 포함한다.

   위에서 성질 P는 관계의 성질인 반사성, 대칭성, 추이성 중 하나임

   예제 5.15 (reflexive closure) \(A = \{1, 2, 3\}\)위로의 관계 \(R = \{(1, 1),
   (1, 2), (2, 1), (3, 2)\}\)의 반사성을 가지는 클로저 \(R^+\)는 \((2, 2)\)와 \((3,
   3)\)를 \(R\)에 추가하면 된다. \[ R^+ = \{(1, 1), (1, 2), (2, 1), (3, 2)\} \cup
   \{(2, 2), (3, 3)\} \] \[ = \{(1, 1), (1, 2), (2, 1), (3, 2),(2, 2), (3,
   3)\} \]
     * \(R \subseteq R^+\)
     * 반사성 체크: \(\forall a \in A: (a,a) \in R^+\) … OK.

   Remark.
     * 반사성을 가지는 클로저
         1. \(\Delta = \{(a, a)| a \in A\}\)를 diagonal relation(대각 관계)라고 함
         2. \(R^+ = R \cup \Delta\).
     * 대칭성을 가지는 클로저
         1. \(R^{-1} = \{(b, a)| (a, b) \in R\}\) (역관계)
         2. \(R^+ = R \cup R^{-1}\).

   예제 5.16 정수집합위에 정의된 관계 \(R = \{(a, b) | a < b\}\)의 반사성(reflexivity)을 가지는
   클로저(closure)는?

   \[ R^+ = R \cup \Delta = \{(a, b) | a < b\} \cup \{(a, a)| a \in Z\} =
   \{(a, b)| a \le b\}. \]
     __________________________________________________________________

   정의 5.11 Let \(R\) be a relation on a set \(A\). The connectivity
   relation \(R^∗\) consists of the pairs \((a, b)\) such that there is a
   path of length at least one from \(a\) to \(b\) in \(R\).

   \[ R^* = \bigcup_{n=1}^\infty R^n. \]

   정리5.4 The transitive closure of a relation \(R\) equals the
   connectivity relation \(R^∗\).

5.6 동치와 분할

   정의 5.12 (동치관계, equivalence) A relation is called equivalence relation
   if it is reflexive, symmetric and transitive.

   반사성, 대칭성, 추이성을 가지는 관계를 동치관계(equivalence relation)라고 함, 즉
    1. 반사성: \((a,a) \in R\),
    2. 대칭성: \((a,b) \in R \then (b,a) \in R\),
    3. 추이성: \((a,b) \in R \land (b,c) \in R \then (a,c)\in R\)

   [relationship_equivalence.png]

   예제 5.17 집합 \(X=\{a,b,c\}\)위로의 관계 \(R\)을 아래와 같이 정의할 때, \(R\)은 동치관계? \[
   R=\{(a,a),(b,b),(c,c),(b,c),(c,b)\} \]
    1. 반사성: \((a,a),(b,b),(c,c) \in R\),
    2. 대칭성: \((b,c) \in R \then (c,a) \in R\),
    3. 추이성: \((b,c) \in R \land (c,b) \in R \then (b,b)\in R\)

   예제 5.18 정수집합(\(Z\))위에 정의된 \(R = \{(a, b) | a - b \in Z\}\), \(R\)은
   동치관계?

   Check conditions:
    1. 반사성: \((a,a) \in R\), \(a-a = 0 \in Z\) ….. OK
    2. 대칭성: \((a,b) \in R \then (b,a) \in R\), \(a-b \in Z \then b-a \in
       Z\) ….. OK
    3. 추이성: \((a,b) \in R \land (b,c) \in R \then (a,c)\in R\), \(a-c =
       (a-b) + (b-c) \in Z\) ….. OK

   정의 5.13 (동치클래스, equialence class) \(R\)를 집합 \(A\)위로의 동치관계일 때, \(A\)에 속한
   어떤 \(x\)에 대하여 \((x, y) \in R\)인 \(y\)들의 모임을 \(R\)에 대한 \(x\)의 동치클래스 또는
   동치류(equialence class)라고 하고 \([x]\)로 표시함, 즉 \[ [x] = \{y| (x,y)\in R\},
   \]
   이 때, \(A\)에 속한 모든 \(x\)들의 동치클래스의 모임을 몫집합(quotient set)이라 하고
   \(\frac{A}{R}\)로 표기함, 즉 \[ \frac{A}{R} = \{[x] | x \in A\}. \]

   예제 5.19 집합 \(X=\{a,b,c\}\)위로의 동치관계 \(R\)을 아래와 같이 정의할 때, \[
   R=\{(a,a),(b,b),(c,c),(b,c),(c,b)\} \] \(X\)의 각 원소에 대한 동치클래스는 \[
   [a]=\{a\},~~~~[b]=[c]=\{b,c\}. \]

   정의 5.14 (집합의 분할, partition) \(S\)를 공집합이 아닌 임의의 집합이라고 하고, \(S\)의 부분집합이
   원소인 집합 \(P= \{A_1, A_2, ..., A_n\}\)가 다음을 만족하면 \(P\)를 집합 \(S\)의 분할이라고
   한다.
    1. \(A_1, A_2, ..., A_n\)이 \(S\)의 공집합이 아닌 진부분집합이고 (\(A_i \ne
       \emptyset\), \(A_i \subset S\), \(i=1,2,...,n\)),
    2. \(A_i \cap A_j = \emptyset, i\ne j\) (서로소, disjoint),
    3. \(S = A_1 \cup A_2 \cup ... \cup A_n = \bigcup_{i=1}^n A_i.\)

   정리5.5
    1. 모든 \(x \in X\)는 \(x \in [x]\),
    2. 임의의 두 동치클래스 \([x]\)와 \([[y]\)는 서로 같거나 또는 서로소(disjoint)이다.
    3. \(x\in [x]\)이고 \(x in [y]\)이면 \([x] = [y]\).
    4. \(A\)에서 정의한 동치관계의 모든 동치클래스는 집합 \(A\)의 분할이다.

   예제 5.20 위의 예제에서 \(X=\{a,b,c\}\)위로의 동치관계 \[
   R=\{(a,a),(b,b),(c,c),(b,c),(c,b)\}, \] \(X\)의 각 원소에 대한 동치클래스는 \[
   [a]=\{a\},~~~~[b]=[c]=\{b,c\}. \] 이고, \([a]\)와 \([b]\)는
   \(X=\{a,b,c\}\)의 분할이다.
     __________________________________________________________________

   정의 5.15 (mod 합동; congruence modulo) 정수집합에서 \(m\)으로 나누었을 때 나머지가 같은 순서쌍
   \((a, b)\)들로 이루어진 관계를 mod 합동 관계라고 하고, 두 수의 관계를 다음과 같이 표시함 \[ a \equiv b
   (mod ~~m). \] 즉, mod 합동 관계는 \[ R = \{(a, b) | a \equiv b (mod ~~m)\}.
   \]

   정리5.6 mod 합동 관계(congruence modulo)는 동치관계임
    1. 반사성 (Reflexivity): \(a \equiv a (mod ~n)\)
    2. 대칭성 (Symmetry): \(a ≡ b (mod ~n)\)이면 \(b ≡ a (mod ~n)\).
    3. 추이성 (Transitivity): \(a ≡ b (mod ~n)\)이고 \(b ≡ c (mod ~n)\)이면 \(a ≡
       c (mod ~n)\)

   예제 5.21 0과 양의 정수집합 \(Z_0 = \{0\}\cup Z^+\)에서 정의된 \(a \equiv b (mod
   ~3)\)에서 동치클래스를 구하면 아래와 같고

   \[[0]=\{0,3,6,...\} = \{3k| k\in Z_0\}\] \[[1]=\{1,4,7,...\}= \{3k+1|
   k\in Z_0\}\] \[[2]=\{2,5,8,...\}= \{3k+2| k\in Z_0\}\]

   위의 동치클래스는 \(Z_0\)의 분할이다.

5.7 부분 순서 관계

   정의 5.16 (부분 순서 관계, partial ordered relation)
     * 반사성(reflexive), 반대칭성(antisymmetric), 추이성(transitive)을 가지는 관계를 부분 순서
       관계라고 함
     * 집합 \(A\)와 \(A\)위로의 관계 \(R\)이 부분 순서 관계이면 \((A, R)\)을 부분순서집합(partial
       ordered set, POSet)이라고 함
     * \((x, y) \in R\) (부분 순서 관계)이면 \(x \lesssim y\)으로 표시함

   예제 5.22 아래는 \(\{x,y,z\}\)의 멱집합(power set)위로의 포함관계(\(\subset\))를 방향그래프로
   나타낸 것이다. 이런 관계는 부분 순서 관계인가?

   [1200px-Hasse_diagram_of_powerset_of_3.svg.png]

   [Partial-order-graph.png]

   부분 순서 관계그래프

   예제 5.23 자연수 집합에서 \(\le\) 는 부분순서관계임

   부분순서관계에 대한 조건을 체크:
    1. 반사관계 \[ \forall x\in N, ~x \le x \]
    2. 반대칭관계 \[ \forall x, y \in N,~ x \le y \land y \le x \then x=y \]
    3. 추이관계 \[ \forall x, y,z \in N, ~x \le y \land y \le x \then x \le z
       \]

   예제 5.24 집합 \(S\)의 부분집합에서의 포함관계 \(\subseteq\) 는 부분순서관계임
    1. 반사관계 \[ \forall A\subseteq S, ~A \subseteq A \]
    2. 반대칭관계 \[ \forall A, B \subseteq S,~ A \subseteq B \land B \subseteq
       A \then A=B \]
    3. 추이관계 \[ \forall A, B,C \subseteq S, ~A \le B \land B \subseteq C
       \then A \subseteq C \]

   비교 가능(comparable)
          부분 순서 집합 \((A, \lesssim)\)에서 집합 \(A\)의 모든 두 원소 \(x \ne y\)가 \(x
          \lesssim y\) 또는 \(y \lesssim x\)이면(둘 중 하나) \(x\) 와 \(y\)는
          비교가능이라고 함

   정의 5.17 (선형순서, linear order, total order) 집합 \(A\)위로의 관계 \(R\)이 다음 조건을
   만족하면 선형순서라고 함
    1. \(R\)이 부분 순서 관계이면서
    2. 만약 \((a, b) \in R\) 또는 \((b, a) \in R\) 또는 \(a=b\) 중 하나이다.

   선형 순서 집합(linearly ordered set)
          집합 \(A\)의 모든 두 원소가 비교가능하면 \(A\)를 선형 순서 집합이라 함

   선형 순서 관계(linearly ordered relation, linear order)
          선형 순서 집합, \((A, \lesssim)\)에서 관계 \(\lesssim\)를 선형 순서 관계라고 함

   예제 5.25 정수집합에서 \(\le\)는 선형순서 관계임

   왜냐하면 \(a\ne b\)이면 \(a \le b\)이거나 \(b \le a\) 둘 중 하나임

   하세 도표(Hasse Diagram)
          독일의 수학자 하세(Helmut Hasse, 1898~1979)가 부분 순서 집합 (POset)\((A,
          \lesssim)\)를 그래프로 나타낼 때 고안하여 사용함

     * 화살표와 모든 순환(loop)은 표시하지 않고
     * 모든 연결선(edge)을 트리(tree)와 같이 모두 아래 방향을 향하도록 그림
     * 집합 \(A\)의 원소 \(x, y, z\)에서 \(x \lesssim y\)이고 \(y \lesssim z\)를
       만족하는 \(y\)가 존재하지 않을 경우에만 \(x\)에서 \(z\)로 연결

   예제 5.26 \(A = \{1, 2, 3, 4\}\)위의 관계 \(\le\)에 대한 Hasse Diagram의 작성

   \[ \le = \{(1,1), (1,2), (1,3), (1,4), (2,2), (2,3), (2,4), (3,3),
   (3,4), (4,4)\} \]

   아래 그림에서 처럼
    1. loop제거
    2. (1,2), (2,3)이 있으므로 (1,3)을 제거, 같은 방법으로 나머지도 제거함
    3. 화살표 제거

   [hasse_diagram_00.png]

   하세도표의 예

   [hasse_diagram.png] [hasse_diagram_2.png]

5.8 연습문제

     교재 206 ~ 210페이지의 아래 주관식 문제를 풀어라.

     5, 6, 8, 9, 12, 13, 14, 17, 19

중간고사 일정 공지

     * 일시: 4월 27일 목요일 오후 2:30 ~ 4:00
     * 범위: 논리와 명제, 집합과 수, 증명, 관계, 행렬
     * 장소: 논리회로실(20명), 에밀레홀 (나머지 인원)
     * 시험준비방법: 교재 및 강의노트 중심으로 각 단원별 연습문제 풀기 (과제 포함)
     * 시험 유형 및 내용
         1. 객관식 / 주관식 문항 혼합
         2. 개념 및 정의
         3. 간단한 증명
         4. 기타 연습문제 내용
